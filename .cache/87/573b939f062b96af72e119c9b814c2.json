{"id":"tASB","dependencies":[{"name":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/builder/run.js.map","includedInParent":true,"mtime":1620712940685},{"name":"/Users/yangjunran/Desktop/github/sv-demo/package.json","includedInParent":true,"mtime":1620836303330},{"name":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/package.json","includedInParent":true,"mtime":1620712940685},{"name":"../vector","loc":{"line":20,"column":25},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/builder/run.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Run=void 0;const e=require(\"../vector\");class t{get length(){return this._values.length}get(e){return this._values[e]}clear(){return this._values=null,this}bind(t){return t instanceof e.Vector?t:(this._values=t,this)}}exports.Run=t;"},"sourceMaps":{"js":{"mappings":[{"source":"builder/run.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":87}},{"source":"builder/run.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":93}},{"source":"builder/run.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":95}},{"source":"builder/run.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":103}},{"source":"builder/run.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":116}},{"source":"builder/run.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":122}},{"source":"builder/run.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":1,"column":124}},{"source":"builder/run.ts","name":null,"original":{"line":24,"column":26},"generated":{"line":1,"column":137}},{"source":"builder/run.ts","name":null,"original":{"line":24,"column":33},"generated":{"line":1,"column":144}},{"source":"builder/run.ts","name":null,"original":{"line":24,"column":38},"generated":{"line":1,"column":149}},{"source":"builder/run.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":1,"column":157}},{"source":"builder/run.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":1,"column":164}},{"source":"builder/run.ts","name":null,"original":{"line":25,"column":15},"generated":{"line":1,"column":168}},{"source":"builder/run.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":1,"column":171}},{"source":"builder/run.ts","name":null,"original":{"line":25,"column":39},"generated":{"line":1,"column":178}},{"source":"builder/run.ts","name":null,"original":{"line":25,"column":44},"generated":{"line":1,"column":183}},{"source":"builder/run.ts","name":null,"original":{"line":25,"column":52},"generated":{"line":1,"column":191}},{"source":"builder/run.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":1,"column":194}},{"source":"builder/run.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":1,"column":202}},{"source":"builder/run.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":1,"column":209}},{"source":"builder/run.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":1,"column":214}},{"source":"builder/run.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":1,"column":222}},{"source":"builder/run.ts","name":null,"original":{"line":26,"column":55},"generated":{"line":1,"column":227}},{"source":"builder/run.ts","name":null,"original":{"line":27,"column":11},"generated":{"line":1,"column":232}},{"source":"builder/run.ts","name":null,"original":{"line":27,"column":16},"generated":{"line":1,"column":237}},{"source":"builder/run.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":1,"column":240}},{"source":"builder/run.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":1,"column":247}},{"source":"builder/run.ts","name":null,"original":{"line":28,"column":30},"generated":{"line":1,"column":260}},{"source":"builder/run.ts","name":null,"original":{"line":28,"column":30},"generated":{"line":1,"column":262}},{"source":"builder/run.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":1,"column":269}},{"source":"builder/run.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":1,"column":272}},{"source":"builder/run.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":1,"column":277}},{"source":"builder/run.ts","name":null,"original":{"line":31,"column":23},"generated":{"line":1,"column":285}},{"source":"builder/run.ts","name":null,"original":{"line":32,"column":15},"generated":{"line":1,"column":287}},{"source":"builder/run.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":294}},{"source":"builder/run.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":302}},{"source":"builder/run.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":306}}],"sources":{"builder/run.ts":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    protected _values!: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"0a795a18d6baa1ed5714012c31d6f71a","cacheData":{"env":{}}}