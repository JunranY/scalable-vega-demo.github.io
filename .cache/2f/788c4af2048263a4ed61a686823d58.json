{"id":"hz18","dependencies":[{"name":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/builder/valid.js.map","includedInParent":true,"mtime":1620712940685},{"name":"/Users/yangjunran/Desktop/github/sv-demo/package.json","includedInParent":true,"mtime":1620836303330},{"name":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/package.json","includedInParent":true,"mtime":1620712940685},{"name":"../util/pretty","loc":{"line":20,"column":25},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/builder/valid.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/util/pretty.js"},{"name":"../util/compat","loc":{"line":21,"column":25},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/builder/valid.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/util/compat.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createIsValidFunction=void 0;const e=require(\"../util/pretty\"),t=require(\"../util/compat\");function n(e){if(!e||e.length<=0)return function(e){return!0};let t=\"\";const n=e.filter(e=>e==e);return n.length>0&&(t=`\\n    switch (x) {${n.map(e=>`\\n        case ${r(e)}:`).join(\"\")}\\n            return false;\\n    }`),e.length!==n.length&&(t=`if (x !== x) return false;\\n${t}`),new Function(\"x\",`${t}\\nreturn true;`)}function r(n){return\"bigint\"!=typeof n?e.valueToString(n):t.BigIntAvailable?`${e.valueToString(n)}n`:`\"${e.valueToString(n)}\"`}exports.createIsValidFunction=n;"},"sourceMaps":{"js":{"mappings":[{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":105}},{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":111}},{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":113}},{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":121}},{"source":"builder/valid.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":139}},{"source":"builder/valid.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":141}},{"source":"builder/valid.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":149}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":167}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":1,"column":176}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":77},"generated":{"line":1,"column":178}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":181}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":185}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":1,"column":188}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":34},"generated":{"line":1,"column":190}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":44},"generated":{"line":1,"column":198}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":1,"column":200}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":15},"generated":{"line":1,"column":207}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":32},"generated":{"line":1,"column":216}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":46},"generated":{"line":1,"column":219}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":53},"generated":{"line":1,"column":226}},{"source":"builder/valid.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":229}},{"source":"builder/valid.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":233}},{"source":"builder/valid.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":235}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":1,"column":238}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":10},"generated":{"line":1,"column":244}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":19},"generated":{"line":1,"column":246}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":30},"generated":{"line":1,"column":248}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":38},"generated":{"line":1,"column":255}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":44},"generated":{"line":1,"column":258}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":50},"generated":{"line":1,"column":261}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":4},"generated":{"line":1,"column":264}},{"source":"builder/valid.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":1,"column":271}},{"source":"builder/valid.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":1,"column":273}},{"source":"builder/valid.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":1,"column":280}},{"source":"builder/valid.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":284}},{"source":"builder/valid.ts","name":null,"original":{"line":54,"column":18},"generated":{"line":1,"column":307}},{"source":"builder/valid.ts","name":null,"original":{"line":54,"column":25},"generated":{"line":1,"column":309}},{"source":"builder/valid.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":1,"column":313}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":1,"column":334}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":27},"generated":{"line":1,"column":336}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":1,"column":343}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":39},"generated":{"line":1,"column":348}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":389}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":19},"generated":{"line":1,"column":391}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":30},"generated":{"line":1,"column":400}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":37},"generated":{"line":1,"column":402}},{"source":"builder/valid.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":411}},{"source":"builder/valid.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":1,"column":444}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":11},"generated":{"line":1,"column":449}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":1,"column":453}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":24},"generated":{"line":1,"column":462}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":32},"generated":{"line":1,"column":469}},{"source":"builder/valid.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":1,"column":488}},{"source":"builder/valid.ts","name":null,"original":{"line":70,"column":9},"generated":{"line":1,"column":497}},{"source":"builder/valid.ts","name":null,"original":{"line":70,"column":21},"generated":{"line":1,"column":499}},{"source":"builder/valid.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":1,"column":502}},{"source":"builder/valid.ts","name":null,"original":{"line":71,"column":21},"generated":{"line":1,"column":508}},{"source":"builder/valid.ts","name":null,"original":{"line":71,"column":15},"generated":{"line":1,"column":525}},{"source":"builder/valid.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":527}},{"source":"builder/valid.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":529}},{"source":"builder/valid.ts","name":null,"original":{"line":72,"column":29},"generated":{"line":1,"column":543}},{"source":"builder/valid.ts","name":null,"original":{"line":73,"column":15},"generated":{"line":1,"column":546}},{"source":"builder/valid.ts","name":null,"original":{"line":73,"column":15},"generated":{"line":1,"column":548}},{"source":"builder/valid.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":567}},{"source":"builder/valid.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":569}},{"source":"builder/valid.ts","name":null,"original":{"line":74,"column":32},"generated":{"line":1,"column":583}},{"source":"builder/valid.ts","name":null,"original":{"line":76,"column":15},"generated":{"line":1,"column":593}},{"source":"builder/valid.ts","name":null,"original":{"line":76,"column":15},"generated":{"line":1,"column":595}},{"source":"builder/valid.ts","name":null,"original":{"line":76,"column":29},"generated":{"line":1,"column":609}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":615}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":623}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":645}}],"sources":{"builder/valid.ts":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    const noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n"},"lineCount":null}},"error":null,"hash":"f260481faa4bb87a557626efe1c83bd4","cacheData":{"env":{}}}