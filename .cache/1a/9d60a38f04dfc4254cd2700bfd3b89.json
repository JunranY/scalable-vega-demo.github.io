{"id":"node_modules/apache-arrow/vector/index.js","dependencies":[{"name":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js.map","includedInParent":true,"mtime":1620712940685},{"name":"/Users/yangjunran/Desktop/github/sv-demo/package.json","includedInParent":true,"mtime":1620836303330},{"name":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/package.json","includedInParent":true,"mtime":1620712940685},{"name":"../vector","loc":{"line":92,"column":25},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector.js"},{"name":"./base","loc":{"line":94,"column":23},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/base.js"},{"name":"./binary","loc":{"line":24,"column":23},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/binary.js"},{"name":"./bool","loc":{"line":26,"column":21},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/bool.js"},{"name":"./chunked","loc":{"line":93,"column":26},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/chunked.js"},{"name":"./date","loc":{"line":30,"column":21},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/date.js"},{"name":"./decimal","loc":{"line":34,"column":24},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/decimal.js"},{"name":"./dictionary","loc":{"line":36,"column":27},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/dictionary.js"},{"name":"./fixedsizebinary","loc":{"line":38,"column":32},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/fixedsizebinary.js"},{"name":"./fixedsizelist","loc":{"line":40,"column":30},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/fixedsizelist.js"},{"name":"./float","loc":{"line":42,"column":22},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/float.js"},{"name":"./interval","loc":{"line":47,"column":25},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/interval.js"},{"name":"./int","loc":{"line":51,"column":20},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/int.js"},{"name":"./list","loc":{"line":61,"column":21},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/list.js"},{"name":"./map","loc":{"line":63,"column":20},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/map.js"},{"name":"./null","loc":{"line":65,"column":21},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/null.js"},{"name":"./struct","loc":{"line":67,"column":23},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/struct.js"},{"name":"./timestamp","loc":{"line":69,"column":26},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/timestamp.js"},{"name":"./time","loc":{"line":75,"column":21},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/time.js"},{"name":"./union","loc":{"line":81,"column":22},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/union.js"},{"name":"./utf8","loc":{"line":85,"column":21},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/utf8.js"},{"name":"./row","loc":{"line":87,"column":20},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/row.js"},{"name":"../util/fn","loc":{"line":90,"column":19},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/util/fn.js"},{"name":"../enum","loc":{"line":91,"column":23},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/enum.js"},{"name":"../util/bit","loc":{"line":95,"column":22},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/util/bit.js"},{"name":"../util/compat","loc":{"line":96,"column":25},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/util/compat.js"},{"name":"../builder","loc":{"line":97,"column":26},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/builder.js"},{"name":"../visitor/get","loc":{"line":98,"column":22},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/get.js"},{"name":"../visitor/set","loc":{"line":99,"column":22},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/set.js"},{"name":"../visitor/indexof","loc":{"line":100,"column":26},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/indexof.js"},{"name":"../visitor/toarray","loc":{"line":101,"column":26},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/toarray.js"},{"name":"../visitor/iterator","loc":{"line":102,"column":27},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/iterator.js"},{"name":"../visitor/bytewidth","loc":{"line":103,"column":28},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/bytewidth.js"},{"name":"../visitor/vectorctor","loc":{"line":104,"column":29},"parent":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/vector/index.js","resolved":"/Users/yangjunran/Desktop/github/sv-demo/node_modules/apache-arrow/visitor/vectorctor.js"}],"generated":{"js":"\"use strict\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vectorFromValuesWithType = exports.StructRow = exports.MapRow = exports.Utf8Vector = exports.SparseUnionVector = exports.DenseUnionVector = exports.UnionVector = exports.TimeNanosecondVector = exports.TimeMicrosecondVector = exports.TimeMillisecondVector = exports.TimeSecondVector = exports.TimeVector = exports.TimestampNanosecondVector = exports.TimestampMicrosecondVector = exports.TimestampMillisecondVector = exports.TimestampSecondVector = exports.TimestampVector = exports.StructVector = exports.NullVector = exports.MapVector = exports.ListVector = exports.Uint64Vector = exports.Uint32Vector = exports.Uint16Vector = exports.Uint8Vector = exports.Int64Vector = exports.Int32Vector = exports.Int16Vector = exports.Int8Vector = exports.IntVector = exports.IntervalYearMonthVector = exports.IntervalDayTimeVector = exports.IntervalVector = exports.Float64Vector = exports.Float32Vector = exports.Float16Vector = exports.FloatVector = exports.FixedSizeListVector = exports.FixedSizeBinaryVector = exports.DictionaryVector = exports.DecimalVector = exports.DateMillisecondVector = exports.DateDayVector = exports.DateVector = exports.Chunked = exports.BoolVector = exports.BinaryVector = exports.BaseVector = exports.Vector = void 0;\nvar vector_1 = require(\"../vector\");\nObject.defineProperty(exports, \"Vector\", { enumerable: true, get: function () { return vector_1.Vector; } });\nvar base_1 = require(\"./base\");\nObject.defineProperty(exports, \"BaseVector\", { enumerable: true, get: function () { return base_1.BaseVector; } });\nvar binary_1 = require(\"./binary\");\nObject.defineProperty(exports, \"BinaryVector\", { enumerable: true, get: function () { return binary_1.BinaryVector; } });\nvar bool_1 = require(\"./bool\");\nObject.defineProperty(exports, \"BoolVector\", { enumerable: true, get: function () { return bool_1.BoolVector; } });\nvar chunked_1 = require(\"./chunked\");\nObject.defineProperty(exports, \"Chunked\", { enumerable: true, get: function () { return chunked_1.Chunked; } });\nvar date_1 = require(\"./date\");\nObject.defineProperty(exports, \"DateVector\", { enumerable: true, get: function () { return date_1.DateVector; } });\nObject.defineProperty(exports, \"DateDayVector\", { enumerable: true, get: function () { return date_1.DateDayVector; } });\nObject.defineProperty(exports, \"DateMillisecondVector\", { enumerable: true, get: function () { return date_1.DateMillisecondVector; } });\nvar decimal_1 = require(\"./decimal\");\nObject.defineProperty(exports, \"DecimalVector\", { enumerable: true, get: function () { return decimal_1.DecimalVector; } });\nvar dictionary_1 = require(\"./dictionary\");\nObject.defineProperty(exports, \"DictionaryVector\", { enumerable: true, get: function () { return dictionary_1.DictionaryVector; } });\nvar fixedsizebinary_1 = require(\"./fixedsizebinary\");\nObject.defineProperty(exports, \"FixedSizeBinaryVector\", { enumerable: true, get: function () { return fixedsizebinary_1.FixedSizeBinaryVector; } });\nvar fixedsizelist_1 = require(\"./fixedsizelist\");\nObject.defineProperty(exports, \"FixedSizeListVector\", { enumerable: true, get: function () { return fixedsizelist_1.FixedSizeListVector; } });\nvar float_1 = require(\"./float\");\nObject.defineProperty(exports, \"FloatVector\", { enumerable: true, get: function () { return float_1.FloatVector; } });\nObject.defineProperty(exports, \"Float16Vector\", { enumerable: true, get: function () { return float_1.Float16Vector; } });\nObject.defineProperty(exports, \"Float32Vector\", { enumerable: true, get: function () { return float_1.Float32Vector; } });\nObject.defineProperty(exports, \"Float64Vector\", { enumerable: true, get: function () { return float_1.Float64Vector; } });\nvar interval_1 = require(\"./interval\");\nObject.defineProperty(exports, \"IntervalVector\", { enumerable: true, get: function () { return interval_1.IntervalVector; } });\nObject.defineProperty(exports, \"IntervalDayTimeVector\", { enumerable: true, get: function () { return interval_1.IntervalDayTimeVector; } });\nObject.defineProperty(exports, \"IntervalYearMonthVector\", { enumerable: true, get: function () { return interval_1.IntervalYearMonthVector; } });\nvar int_1 = require(\"./int\");\nObject.defineProperty(exports, \"IntVector\", { enumerable: true, get: function () { return int_1.IntVector; } });\nObject.defineProperty(exports, \"Int8Vector\", { enumerable: true, get: function () { return int_1.Int8Vector; } });\nObject.defineProperty(exports, \"Int16Vector\", { enumerable: true, get: function () { return int_1.Int16Vector; } });\nObject.defineProperty(exports, \"Int32Vector\", { enumerable: true, get: function () { return int_1.Int32Vector; } });\nObject.defineProperty(exports, \"Int64Vector\", { enumerable: true, get: function () { return int_1.Int64Vector; } });\nObject.defineProperty(exports, \"Uint8Vector\", { enumerable: true, get: function () { return int_1.Uint8Vector; } });\nObject.defineProperty(exports, \"Uint16Vector\", { enumerable: true, get: function () { return int_1.Uint16Vector; } });\nObject.defineProperty(exports, \"Uint32Vector\", { enumerable: true, get: function () { return int_1.Uint32Vector; } });\nObject.defineProperty(exports, \"Uint64Vector\", { enumerable: true, get: function () { return int_1.Uint64Vector; } });\nvar list_1 = require(\"./list\");\nObject.defineProperty(exports, \"ListVector\", { enumerable: true, get: function () { return list_1.ListVector; } });\nvar map_1 = require(\"./map\");\nObject.defineProperty(exports, \"MapVector\", { enumerable: true, get: function () { return map_1.MapVector; } });\nvar null_1 = require(\"./null\");\nObject.defineProperty(exports, \"NullVector\", { enumerable: true, get: function () { return null_1.NullVector; } });\nvar struct_1 = require(\"./struct\");\nObject.defineProperty(exports, \"StructVector\", { enumerable: true, get: function () { return struct_1.StructVector; } });\nvar timestamp_1 = require(\"./timestamp\");\nObject.defineProperty(exports, \"TimestampVector\", { enumerable: true, get: function () { return timestamp_1.TimestampVector; } });\nObject.defineProperty(exports, \"TimestampSecondVector\", { enumerable: true, get: function () { return timestamp_1.TimestampSecondVector; } });\nObject.defineProperty(exports, \"TimestampMillisecondVector\", { enumerable: true, get: function () { return timestamp_1.TimestampMillisecondVector; } });\nObject.defineProperty(exports, \"TimestampMicrosecondVector\", { enumerable: true, get: function () { return timestamp_1.TimestampMicrosecondVector; } });\nObject.defineProperty(exports, \"TimestampNanosecondVector\", { enumerable: true, get: function () { return timestamp_1.TimestampNanosecondVector; } });\nvar time_1 = require(\"./time\");\nObject.defineProperty(exports, \"TimeVector\", { enumerable: true, get: function () { return time_1.TimeVector; } });\nObject.defineProperty(exports, \"TimeSecondVector\", { enumerable: true, get: function () { return time_1.TimeSecondVector; } });\nObject.defineProperty(exports, \"TimeMillisecondVector\", { enumerable: true, get: function () { return time_1.TimeMillisecondVector; } });\nObject.defineProperty(exports, \"TimeMicrosecondVector\", { enumerable: true, get: function () { return time_1.TimeMicrosecondVector; } });\nObject.defineProperty(exports, \"TimeNanosecondVector\", { enumerable: true, get: function () { return time_1.TimeNanosecondVector; } });\nvar union_1 = require(\"./union\");\nObject.defineProperty(exports, \"UnionVector\", { enumerable: true, get: function () { return union_1.UnionVector; } });\nObject.defineProperty(exports, \"DenseUnionVector\", { enumerable: true, get: function () { return union_1.DenseUnionVector; } });\nObject.defineProperty(exports, \"SparseUnionVector\", { enumerable: true, get: function () { return union_1.SparseUnionVector; } });\nvar utf8_1 = require(\"./utf8\");\nObject.defineProperty(exports, \"Utf8Vector\", { enumerable: true, get: function () { return utf8_1.Utf8Vector; } });\nvar row_1 = require(\"./row\");\nObject.defineProperty(exports, \"MapRow\", { enumerable: true, get: function () { return row_1.MapRow; } });\nObject.defineProperty(exports, \"StructRow\", { enumerable: true, get: function () { return row_1.StructRow; } });\nconst fn = require(\"../util/fn\");\nconst enum_1 = require(\"../enum\");\nconst vector_2 = require(\"../vector\");\nconst chunked_2 = require(\"./chunked\");\nconst base_2 = require(\"./base\");\nconst bit_1 = require(\"../util/bit\");\nconst compat_1 = require(\"../util/compat\");\nconst builder_1 = require(\"../builder\");\nconst get_1 = require(\"../visitor/get\");\nconst set_1 = require(\"../visitor/set\");\nconst indexof_1 = require(\"../visitor/indexof\");\nconst toarray_1 = require(\"../visitor/toarray\");\nconst iterator_1 = require(\"../visitor/iterator\");\nconst bytewidth_1 = require(\"../visitor/bytewidth\");\nconst vectorctor_1 = require(\"../visitor/vectorctor\");\n/** @nocollapse */\nvector_2.Vector.new = newVector;\n/** @nocollapse */\nvector_2.Vector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data, ...args) {\n    return new (vectorctor_1.instance.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nfunction vectorFromValuesWithType(newDataType, input) {\n    if (compat_1.isIterable(input)) {\n        return vector_2.Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    else if (compat_1.isAsyncIterable(input)) {\n        return vector_2.Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    const { 'values': values = [], 'type': type = newDataType(), 'nullValues': nullValues = [null, undefined], } = { ...input };\n    return compat_1.isIterable(values)\n        ? vector_2.Vector.from({ nullValues, ...input, type })\n        : vector_2.Vector.from({ nullValues, ...input, type });\n}\nexports.vectorFromValuesWithType = vectorFromValuesWithType;\nfunction vectorFrom(input) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input };\n    if (compat_1.isIterable(values)) {\n        const chunks = [...builder_1.Builder.throughIterable(options)(values)];\n        return (chunks.length === 1 ? chunks[0] : chunked_2.Chunked.concat(chunks));\n    }\n    return (async (chunks) => {\n        const transform = builder_1.Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return (chunks.length === 1 ? chunks[0] : chunked_2.Chunked.concat(chunks));\n    })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nbase_2.BaseVector.prototype.get = function baseVectorGet(index) {\n    return get_1.instance.visit(this, index);\n};\nbase_2.BaseVector.prototype.set = function baseVectorSet(index, value) {\n    return set_1.instance.visit(this, index, value);\n};\nbase_2.BaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n    return indexof_1.instance.visit(this, value, fromIndex);\n};\nbase_2.BaseVector.prototype.toArray = function baseVectorToArray() {\n    return toarray_1.instance.visit(this);\n};\nbase_2.BaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n    return bytewidth_1.instance.visit(this.type);\n};\nbase_2.BaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n    return iterator_1.instance.visit(this);\n};\nbase_2.BaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(enum_1.Type)\n    .map((T) => enum_1.Type[T])\n    .filter((T) => typeof T === 'number')\n    .filter((typeId) => typeId !== enum_1.Type.NONE)\n    .forEach((typeId) => {\n    const VectorCtor = vectorctor_1.instance.visit(typeId);\n    VectorCtor.prototype['get'] = fn.partial1(get_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['set'] = fn.partial2(set_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['indexOf'] = fn.partial2(indexof_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['toArray'] = fn.partial0(toarray_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype['getByteWidth'] = partialType0(bytewidth_1.instance.getVisitFn(typeId));\n    VectorCtor.prototype[Symbol.iterator] = fn.partial0(iterator_1.instance.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n    return function () { return visit(this.type); };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n    return function (i) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n    return function (i, a) {\n        if (bit_1.setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["vector/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull> }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull> }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return (chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks)) as Vector<T>;\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return (chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks)) as Vector<T>;\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n"]}},"error":null,"hash":"883189bba1099e17665420918448dd53","cacheData":{"env":{}}}